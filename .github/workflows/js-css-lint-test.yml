name: Code Linting and JS Tests

on:
  push:
    branches:
      - develop
      - main
    # Only run if CSS/JS/MD-related files changed.
    paths:
      - '.github/workflows/js-css-lint-test.yml'
      - '**.js'
      - '**.json'
      - '**.scss'
      - '.eslint*'
      - '.nvmrc'
      - '.stylelint*'
      - '**/package.json'
      - 'package-lock.json'
      - '!feature-flags.json'
      - '!composer.json'
  pull_request:
    branches:
      - develop
      - main
      - 'feature/**'
    # Only run if CSS/JS/MD-related files changed.
    paths:
      - '.github/workflows/js-css-lint-test.yml'
      - '**.js'
      - '**.json'
      - '**.scss'
      - '.eslint*'
      - '.nvmrc'
      - '.stylelint*'
      - '**/package.json'
      - 'package-lock.json'
      - '!feature-flags.json'
      - '!composer.json'
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: js-css-lint-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  js-css-lint-test:
    name: JS + CSS
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install npm Globally
        run: npm run install-global-npm

      - name: npm install
        run: npm ci
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      - name: CSS Lint
        run: npm run lint:css
      - name: JS Lint
        run: npm run lint:js
      - name: Jest Tests
        id: test-js
        run: npm run test:js -- --json --outputFile=test-results.json
        continue-on-error: true
      - name: Jest Tests (Retry Failures 1)
        id: test-js-retry-1
        run: npm run test:js -- -- --onlyFailures
        if: steps.test-js.outcome == 'failure'
        continue-on-error: true
      - name: Jest Tests (Retry Failures 2)
        id: test-js-retry-2
        run: npm run test:js -- -- --onlyFailures
        if: steps.test-js-retry-1.outcome == 'failure'
        continue-on-error: true
      - name: Jest Tests (Retry Failures 3)
        id: test-js-retry-3
        run: npm run test:js -- -- --onlyFailures
        if: steps.test-js-retry-2.outcome == 'failure'
        continue-on-error: true

      - name: Check for catastrophic suite failures
        if: always() && steps.test-js.outcome == 'failure'
        run: |
          # The final retry step might have succeeded for flaky tests,
          # so we check its outcome. If it also failed, we let that failure
          # be the one that stops the workflow. If it succeeded, we proceed
          # with our check for ignored catastrophic failures.
          if [ "${{ steps.test-js-retry-3.outcome }}" == "failure" ]; then
            echo "Final retry step failed. Failing the job."
            exit 1
          fi

          # Install jq, a command-line JSON processor
          sudo apt-get install -y jq

          # Check for test suites that have a "failed" status but ran 0 tests,
          # which indicates a crash before tests could run.
          CRASHED_SUITES=$(jq '[.testResults[] | select(.status == "failed" and .assertionResults | length == 0)] | length' test-results.json)

          if [ "$CRASHED_SUITES" -gt 0 ]; then
            echo "Error: Found $CRASHED_SUITES test suite(s) that failed to run."
            echo "This is a catastrophic failure that retries cannot fix."
            exit 1
          fi

          echo "No catastrophic suite failures found."

      - name: Final status check
        if: always()
        run: |
          if [ "${{ steps.test-js-retry-3.outcome }}" == "failure" ]; then
            echo "One or more tests failed after all retries."
            exit 1
          fi
