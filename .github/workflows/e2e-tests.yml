name: E2E Tests

on:
    workflow_dispatch:
    push:
        branches:
            - develop
            - main
        # Ignore Storybook-only and unit-test-only changes when checking to run
        # E2E tests. This is useful when adding/modifying/refactoring/removing
        # test code ONLY in a commit, but saves running the expensive E2E test
        # suite on GitHub Actions when all that's changing are tests and not code
        # that would affect E2E behavior.
        paths:
            - '.github/workflows/e2e-tests.yml'
            - '.babelrc'
            - 'assets/**'
            - 'includes/**'
            - '/*.php'
            - 'jest-puppeteer.config.js'
            - 'composer.json'
            - 'composer.lock'
            - '/php-scoper/composer.lock'
            - 'package.json'
            - 'package-lock.json'
            - 'postcss.config.js'
            - 'webpack/*.config.js'
            - 'webpack.config.js'
            - 'tests/e2e/**'
            - '!assets/**/__tests__/**/*.js'
            - '!assets/**/test/*.js'
            - '!assets/**/*.test.js'
            - '!packages/**/__tests__/**/*.js'
            - '!packages/**/test/*.js'
            - '!packages/**/*.test.js'
    pull_request:
        branches:
            - develop
            - main
            - 'feature/**'
        # Ignore Storybook-only and unit-test-only changes when checking to run
        # E2E tests. This is useful when adding/modifying/refactoring/removing
        # test code ONLY in a commit, but saves running the expensive E2E test
        # suite on GitHub Actions when all that's changing are tests and not code
        # that would affect E2E behavior.
        paths:
            - '.github/workflows/e2e-tests.yml'
            - '.babelrc'
            - 'assets/**'
            - 'includes/**'
            - '/*.php'
            - 'jest-puppeteer.config.js'
            - 'composer.json'
            - 'composer.lock'
            - '/php-scoper/composer.lock'
            - 'package.json'
            - 'package-lock.json'
            - 'postcss.config.js'
            - 'webpack/*.config.js'
            - 'webpack.config.js'
            - 'tests/e2e/**'
            - '!assets/**/__tests__/**/*.js'
            - '!assets/**/test/*.js'
            - '!assets/**/*.test.js'
            - '!packages/**/__tests__/**/*.js'
            - '!packages/**/test/*.js'
            - '!packages/**/*.test.js'
        types:
            - opened
            - reopened
            - synchronize
            - ready_for_review

concurrency:
    group: e2e-tests-${{ github.ref }}
    cancel-in-progress: true

jobs:
    e2e-tests:
        name: E2E (WordPress latest)
        runs-on: ubuntu-latest
        timeout-minutes: 60
        if: github.event_name == 'push' || github.event.pull_request.draft == false
        env:
            AMP_VERSION: ''
            WP_VERSION: 'latest'
            CA_CERT_REFRESH: ''
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js (.nvmrc)
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            # nvm@7 is the minimum version required for npm workspace support.
            # This is needed to prevent js lint failures due to module resolution to the workspace packages.
            # This can be removed once our node base version comes with nvm@7 or greater.
            - name: Restore global npm cache
              uses: actions/cache@v4
              id: global-npm-cache
              with:
                  path: |
                      ~/.npm-global
                      ~/.local/lib/node_modules
                  key: ${{ runner.os }}-global-npm-7.24.2
                  restore-keys: ${{ runner.os }}-global-npm-

            - name: Check npm configuration
              run: |
                  echo "npm prefix: $(npm config get prefix)"
                  echo "npm global prefix: $(npm config get globalprefix)"
                  echo "npm global dir: $(npm config get global-dir)"
                  echo "npm global bin: $(npm config get global-bin)"
                  echo "npm root -g: $(npm root -g)"

            - name: Install npm Globally
              if: steps.global-npm-cache.outputs.cache-hit != 'true'
              run: npm run install-global-npm

            - name: Save global npm cache
              if: steps.global-npm-cache.outputs.cache-hit != 'true'
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm-global
                      ~/.local/lib/node_modules
                  key: ${{ runner.os }}-global-npm-7.24.2

            # Using static cache keys since only test files change between runs for this exercise.
            # Dependencies and build output are deterministic and can be cached permanently.
            - name: Restore npm dependencies cache
              uses: actions/cache@v4
              id: npm-cache
              with:
                  path: |
                      ~/.npm
                      node_modules
                  key: ${{ runner.os }}-npm-deps
                  restore-keys: ${{ runner.os }}-npm-

            - name: npm install
              if: steps.npm-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Save npm dependencies cache
              if: steps.npm-cache.outputs.cache-hit != 'true'
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      node_modules
                  key: ${{ runner.os }}-npm-deps

            - name: Restore build cache
              uses: actions/cache@v4
              id: build-cache
              with:
                  path: dist
                  key: ${{ runner.os }}-build
                  restore-keys: ${{ runner.os }}-build-

            - name: Build
              if: steps.build-cache.outputs.cache-hit != 'true'
              run: npm run build:test

            - name: Save build cache
              if: steps.build-cache.outputs.cache-hit != 'true'
              uses: actions/cache@v4
              with:
                  path: dist
                  key: ${{ runner.os }}-build

            # E2E tests use a dedicated container, this is just for Composer.
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'
                  tools: composer:2.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

            - name: Restore composer cache
              uses: actions/cache@v4
              id: composer-cache-step
              with:
                  path: |
                      ${{ steps.composer-cache.outputs.dir }}
                      vendor
                      third-party
                  key: ${{ runner.os }}-composer-deps
                  restore-keys: ${{ runner.os }}-composer-

            - name: Composer Install
              if: steps.composer-cache-step.outputs.cache-hit != 'true'
              run: composer install --no-interaction --no-progress --no-dev

            - name: Save composer cache
              if: steps.composer-cache-step.outputs.cache-hit != 'true'
              uses: actions/cache@v4
              with:
                  path: |
                      ${{ steps.composer-cache.outputs.dir }}
                      vendor
                      third-party
                  key: ${{ runner.os }}-composer-deps

            - name: Start environment
              run: npm run env:start

            - name: Run the tests
              run: npm run test:e2e

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: e2e-debugging-run[${{ github.run_attempt }}]-wp[${{ env.WP_VERSION }}]-amp[${{ env.AMP_VERSION }}]
                  path: |
                      ~/.npm/_logs/
                      tests/e2e/screenshots/
